const TelegramBot = require("node-telegram-bot-api");
const token = "6453093893:AAEgTRRxGvLfWuacK4yE8-mMteu5EqGrI0U";
const express = require("express");
const cors = require("cors");
const app = express();
app.use(express.json());
app.use(cors({ origin: true }));
const port = process.env.PORT || 3000;

app.get("/", (req, res) => {
  res.send("Hello World!");
});

const bot = new TelegramBot(token, { polling: true });

const all_codes = `(HOTHANDS) ‚Äì –†–æ–∑—Ä–∏–≤–Ω—ñ —É–¥–∞—Ä–∏ —É –±–ª–∏–∂–Ω—å–æ–º—É –±–æ—é.
(LIQUOR) ‚Äì –í–∞—à –≥–µ—Ä–æ–π —Å—Ç–∞–Ω–µ –¥—É–∂–µ –ø‚Äô—è–Ω–∏–º. 
(CATCHME) ‚Äì –®–≤–∏–¥–∫–∏–π –±—ñ–≥ (—Å–ø—Ä–∏–Ω—Ç).
(GOTGILLS) ‚Äì –®–≤–∏–¥–∫–µ –ø–ª–∞–≤–∞–Ω–Ω—è.
(HOPTOIT) ‚Äì –°—É–ø–µ—Ä—Å—Ç—Ä–∏–±–æ–∫.
(SKYFALL) ‚Äì –ü–∞–¥—ñ–Ω–Ω—è –∑ –Ω–µ–±–∞.
(DEADEYE) ‚Äì –£–ø–æ–≤—ñ–ª—å–Ω–µ–Ω–Ω—è —á–∞—Å—É –ø—Ä–∏ –ø—Ä–∏—Ü—ñ–ª—é–≤–∞–Ω–Ω—ñ (—Ö4).
(INCENDIARY) ‚Äì –ü–∞–ª–∞—é—á—ñ –∫—É–ª—ñ.
–ö–æ–¥–∏ –Ω–∞ –º–∞—à–∏–Ω–∏
(COMET) ‚Äì –°–ø–æ—Ä—Ç–∏–≤–Ω–µ –∞–≤—Ç–æ ¬´Comet¬ª.
(RAPIDGT) ‚Äì –°–ø–æ—Ä—Ç–∏–≤–Ω–µ –∞–≤—Ç–æ ‚ÄúRapid GT‚Äù.
(VINEWOOD) ‚Äì –õ—ñ–º—É–∑–∏–Ω ¬´Limo¬ª.
(TRASHED) ‚Äì –°–º—ñ—Ç—Ç—î–≤–æ–∑ ¬´Trashmaster¬ª.
(HOLEIN1) ‚Äì –ì–æ–ª—å—Ñ–∫–∞—Ä ¬´Caddy¬ª
(SNOWDAY) ‚Äì –ö–æ–≤–∑–∞—é—á—ñ –º–∞—à–∏–Ω–∏ (–¥—Ä–∏—Ñ—Ç).
(TURTLE) ‚Äì –†–µ–º–æ–Ω—Ç –º–∞—à–∏–Ω–∏ (–Ω–∞–±–∏—Ä–∞—Ç–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –∞–≤—Ç–æ). 
–ö–æ–¥–∏ –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∏ —Ç–∞ –º–æ—Ç–æ—Ü–∏–∫–ª–∏
(OFFROAD) ‚Äì –†–∞–ª—ñ–π–Ω–∏–π –º–æ—Ç–æ—Ü–∏–∫–ª Sanchez.
(ROCKET) ‚Äì –°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –º–æ—Ç–æ—Ü–∏–∫–ª ¬´PCJ¬ª.
(BANDIT) ‚Äì –í–µ–ª–æ—Å–∏–ø–µ–¥ ¬´BMX¬ª.
–ö–æ–¥–∏ –Ω–∞ –≥–µ–ª—ñ–∫–æ–ø—Ç–µ—Ä–∏ —Ç–∞ –ª—ñ—Ç–∞–∫–∏
(BARNSTORM) ‚Äì –õ—ñ—Ç–∞–∫ –¥–ª—è —Ç—Ä—é–∫—ñ–≤.
(BUZZOFF) ‚Äì –í—ñ–π—Å—å–∫–æ–≤–∏–π –≤–µ—Ä—Ç–æ–ª—ñ—Ç ¬´Buzzard¬ª.
(FLYSPRAY) ‚Äì –ö—É–∫—É—Ä—É–¥–∑–∞ ¬´Duster¬ª.
`;

bot.on("callback_query", (query) => {
  console.log(query.data);
  const chatId = query.message.chat.id;
  let responseMessage;

  switch (query.data) {
    case "health":
      responseMessage = "üñ§ —á—ñ—Ç-–∫–æ–¥ –Ω–∞ –∑–¥–æ—Ä–æ–≤ º—è: BAGUVIX";
      break;
    case "weapon":
      responseMessage = "üî´ —á—ñ—Ç-–∫–æ–¥ –Ω–∞ –∑–±—Ä–æ—é: LXGIWYL";
      break;
    case "other":
      responseMessage = all_codes; // Ensure 'all_codes' is defined and contains the expected data
      break;
    default:
      responseMessage = "Unknown command."; // Optional: handle unknown commands
  }

  bot.sendMessage(chatId, responseMessage).catch((error) => {
    console.error("Error sending message:", error);
  });
});

bot.on("message", (msg) => {
  const chatId = msg.chat.id;
  if (msg.text == "/start") {
    bot.sendMessage(
      chatId,
      "–í—ñ—Ç–∞—î–º–æ. –¶–µ–π –±–æ—Ç –¥–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø–æ —á—ñ—Ç-–∫–æ–¥–∞—Ö –¥–ª—è Grant Theft Auto V."
    );
    // add buttons
    bot.sendMessage(chatId, "–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –∫–æ–¥—É:", {
      reply_markup: {
        inline_keyboard: [
          [
            {
              text: "üñ§ —á—ñ—Ç-–∫–æ–¥ –Ω–∞ –∑–¥–æ—Ä–æ–≤ º—è",
              callback_data: "health",
            },
          ],
          [
            {
              text: "üî´ —á—ñ—Ç-–∫–æ–¥ –Ω–∞ –∑–±—Ä–æ—é",
              callback_data: "weapon",
            },
          ],
          [
            {
              text: "üëÆ –í—Å—ñ —ñ–Ω—à—ñ —á—ñ—Ç-–∫–æ–¥–∏",
              callback_data: "other",
            },
          ],
        ],
      },
    });
  }
});
